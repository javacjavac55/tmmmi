<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">
	
	<resultMap type="com.tmmmi.service.domain.User" id="userSelectMap">
		<result property="userNo"						column="user_no"						jdbcType="NUMERIC"/>
		<result property="userId"						column="user_id"						jdbcType="VARCHAR"/>
		<result property="password"						column="password"						jdbcType="VARCHAR"/>
		<result property="email"						column="email"							jdbcType="VARCHAR"/>
		<result property="emailCheck"					column="email_check"					jdbcType="NUMERIC"/>
		<result property="userName"						column="user_name"						jdbcType="VARCHAR"/>
		<result property="birthday"						column="birthday"						jdbcType="DATE"/>
		<result property="refreshToken"					column="refresh_token"					jdbcType="VARCHAR"/>
		<result property="refreshTokenExpireTime"		column="refresh_token_expire_time"		jdbcType="VARCHAR"/>	
		<result property="snsName"						column="sns_name"						jdbcType="NUMERIC"/>
		<result property="role"							column="role"							jdbcType="NUMERIC"/>
		<result property="withdrawCheck"				column="withdraw_check"					jdbcType="NUMERIC"/>
		<result property="withdrawDate"					column="withdrqs_date"					jdbcType="DATE"/>
	</resultMap>		
	
	<!-- SQL : INSERT -->
	<insert id="addUser" parameterType="com.tmmmi.service.domain.User">
		INSERT	
		INTO users(user_no, user_id, password, email, email_check, user_name, birthday, refresh_token, refresh_token_expire_time, sns_name, role, withdraw_check, withdraw_date)
		VALUES(
			user_no.nextval, 
			#{userId}, 
			#{password:VARCHAR}, 
			#{email}, 
			#{emailCheck}, 
			#{userName}, 
			#{birthday:DATE},
			#{refreshToken:VARCHAR},
			#{refreshTokenExpireTime:VARCHAR},
			#{snsName:INTEGER},
			1,
			#{withdrawCheck:INTEGER},
			#{withdrawDate:DATE}
		)
	</insert>
	
	<!-- SQL : SELECT ONE(getUser) -->
	<select id="getUser" parameterType="int" resultMap="userSelectMap">
		SELECT user_no, user_id, password, email, user_name, birthday, role, withdraw_check
		FROM users 
		WHERE user_no = #{value}
	</select>
	
	<!-- SQL : SELECT ONE(getUserId) -->
	<select id="getUserId" parameterType="string" resultMap="userSelectMap">
		SELECT user_no, user_id, password, role 
		FROM users 
		WHERE user_id = #{value}
	</select>
	
	<!-- SQL : SELECT ONE(getEmail) -->
	<select id="getUserEmail" parameterType="String" resultMap="userSelectMap">
		SELECT user_no, user_id, password, role, email
		FROM users
		WHERE email = #{value}
	</select>
	
	<!-- SQL : SELECT ONE(searchUserId) -->
	<select id="searchUserId" parameterType="com.tmmmi.service.domain.User" resultMap="userSelectMap">
		SELECT user_id
		FROM users
		WHERE user_name = #{userName} AND email = #{email}
	</select>
	
	<!-- SQL : SELECT ONE(searchUserPw) -->
	<select id="searchUserPw" parameterType="com.tmmmi.service.domain.User">
		SELECT password
		FROM users
		WHERE user_id = #{userId} AND email = #{email}
	</select>
		
	<!-- SQL : UPDATE -->
	<update id="updateUser" parameterType="com.tmmmi.service.domain.User">
		UPDATE users
		<set>
			user_name=#{userName},
			password=#{password},
			birthday=#{birthday:DATE},
			role=#{role},
			email=#{email}
		</set>
		WHERE user_no=#{userNo}
	</update>
	
	<!-- SQL : UPDATE(WITHDRAW)-->
	<update id="withdrawUser" parameterType="com.tmmmi.service.domain.User">
		UPDATE users
		<set>
			WITHDRAW_CHECK=#{withdrawCheck},
			WITHDRAW_DATE=SYSDATE
		</set>
		WHERE user_no=#{userNo}
	</update>
	
	<!-- SQL : SELECT LIST -->
	<select  id="getUserList"  parameterType="map"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM ( SELECT inner_table.* , ROWNUM AS row_seq
	  		   FROM ( SELECT user_no, user_id , user_name , email, withdraw_check, withdraw_date
				      FROM users
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
										user_id = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
										user_name = #{searchKeyword}
								</if>
							</where>
						</if>
				      ORDER BY user_no ) inner_table
			   WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	
	<!-- SQL : SELECT ROW Count -->	 
	<select  id="getTotalCount"  parameterType="com.tmmmi.common.Search"	 resultType="int">
	  SELECT COUNT(*)
	  FROM(	SELECT user_no, user_id , user_name , email, withdraw_check, withdraw_date
			FROM users
			<if test="searchCondition != null">
				<where>
					<if test="searchCondition == 0 and searchKeyword !='' ">
			 			user_id = #{searchKeyword}
					</if>
					<if test="searchCondition == 1 and searchKeyword !='' ">
			 		user_name = #{searchKeyword}
					</if>
				</where>
			</if> ) countTable						
	 </select>
</mapper>